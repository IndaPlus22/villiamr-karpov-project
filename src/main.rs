mod api_interaction;
use reqwest::Error;

fn get_fileextension(s: &str) -> Option<&str> {
    let mut i = 0;
    for c in s.chars().rev() {
        if c == '.' {
            return Some(&s[(s.len() - i)..]); 
        }
        i+=1;
    }
    return None;
}

#[tokio::main]
async fn main() -> Result<(), Error>{    
    let api = api_interaction::GithubApiClient::new();
    //api.post_issue("First issue".to_string(), "Generated by action if successfull".to_string()).await?;
    let filemap = api.get_files().await?;

    for (k ,v) in &filemap{
        let extension = match get_fileextension(k) {
            Some(val) => val,
            None => continue
        };
        
        let content = &v[0];
        let mut is_title = true;
        let mut title_buffer: &str = "";
        let mut body_buffer: String = "".to_owned();
        for line in content.split('\n').into_iter() {
            if line.find("//").is_none() {
                if title_buffer != "" {
                    api.post_issue(title_buffer, &body_buffer);
                    title_buffer = "";
                    body_buffer = "".to_owned();
                    is_title = true;
                }
                continue;
            }

            if is_title {
                title_buffer = &line[line.find("//").unwrap() + 2..];
                is_title = false;
            }
            else {
                body_buffer = body_buffer + &line[line.find("//").unwrap() + 2..];
            }
        }
    }

    Ok(())
}
