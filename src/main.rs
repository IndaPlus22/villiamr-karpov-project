mod api_interaction;
use reqwest::Error;

fn get_fileextension(s: &str) -> Option<&str> {
    let mut i = 0;
    for c in s.chars().rev() {
        if c == '.' {
            return Some(&s[(s.len() - i)..]); 
        }
        i+=1;
    }
    return None;
}

#[tokio::main]
async fn main() -> Result<(), octocrab::Error>{    
    //let api = api_interaction::GithubApiClient::new();
    let issuepage = api_interaction::GithubApiClient::get_issues().await?;


    for issue in &issuepage {
        println!("{} {:?}", issue.title, issue.body);
    }
    //api.post_issue("First issue".to_string(), "Generated by action if successfull".to_string()).await?;
//    let filemap = api.get_files().await?;
//
//    for (k ,v) in &filemap{
//        let extension = match get_fileextension(k) {
//            Some(val) => val,
//            None => continue
//        };
//        
//        if extension != "rs" {
//            continue;
//        }
//
//        for content in v {
//            let mut is_title = true;
//            let mut title_buffer: &str = "";
//            let mut body_buffer: String = "".to_owned();
//            for line in content.split('\n').into_iter() {
//                if line.find("//").is_none() {
//                    if title_buffer != "" && !is_title{
//                        api.post_issue(title_buffer, &body_buffer).await?;
//                        title_buffer = "";
//                        body_buffer = "".to_owned();
//                        is_title = true;
//                    }
//                    continue;
//                }
//
//                println!("LINE:    {}",line);
//                if is_title && line.find("//TODO:").is_some() {
//                    title_buffer = &line[line.find("//TODO:").unwrap() + 7..];
//                    is_title = false;
//                }
//                else if !is_title{
//                    body_buffer = body_buffer + &line[line.find("//").unwrap() + 2..];
//                }
//            }
//        }
//    }
    
    //TODO: Den h√§r retunerar okej 
    //om detta issue finns
    //Fungerar skiten
    Ok(())
}
